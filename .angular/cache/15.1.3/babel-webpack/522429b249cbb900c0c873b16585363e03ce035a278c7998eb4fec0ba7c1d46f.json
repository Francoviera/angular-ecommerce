{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.shopItems = [];\n  }\n  get() {\n    return this.shopItems;\n  }\n  add(item) {\n    let i = this.shopItems.findIndex(item => item.id === item.id);\n    if (i > 0) {\n      this.shopItems[i].count++;\n    } else {\n      this.shopItems.push(item);\n    }\n  }\n  remove(id) {\n    let i = this.shopItems.findIndex(item => item.id === id);\n    i > 0 ? this.shopItems.splice(i, 1) : \"\";\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAI5BC;IAFA,cAAS,GAAe,EAAE;EAEZ;EAEPC,GAAG;IACN,OAAO,IAAI,CAACC,SAAS;EACzB;EAEOC,GAAG,CAACC,IAAc;IACrB,IAAIC,CAAC,GAAE,IAAI,CAACH,SAAS,CAACI,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC;IAC5D,IAAGF,CAAC,GAAG,CAAC,EAAC;MACL,IAAI,CAACH,SAAS,CAACG,CAAC,CAAC,CAACG,KAAK,EAAE;KAC5B,MAAI;MACD,IAAI,CAACN,SAAS,CAACO,IAAI,CAACL,IAAI,CAAC;;EAEjC;EAEOM,MAAM,CAACH,EAAU;IACpB,IAAIF,CAAC,GAAE,IAAI,CAACH,SAAS,CAACI,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;IACvDF,CAAC,GAAG,CAAC,GAAG,IAAI,CAACH,SAAS,CAACS,MAAM,CAACN,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EAC5C;;AAtBSN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAa,SAAnBb,mBAAmB;AAAA","names":["ShoppingCartService","constructor","get","shopItems","add","item","i","findIndex","id","count","push","remove","splice","factory"],"sourceRoot":"","sources":["C:\\Users\\Franco Viera\\Desktop\\challenge\\challenge\\src\\app\\service\\shopping-cart.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../shared/models/product';\r\nimport { ShopItem } from '../shared/models/shopItem';\r\n\r\n@Injectable()\r\nexport class ShoppingCartService {\r\n\r\n    shopItems: ShopItem[] = [];\r\n\r\n    constructor(){}\r\n\r\n    public get(): ShopItem[] {\r\n        return this.shopItems;\r\n    }\r\n\r\n    public add(item: ShopItem): void {\r\n        let i= this.shopItems.findIndex(item => item.id === item.id);\r\n        if(i > 0){\r\n            this.shopItems[i].count++;\r\n        }else{\r\n            this.shopItems.push(item);\r\n        }\r\n    }\r\n\r\n    public remove(id: number): void{\r\n        let i= this.shopItems.findIndex(item => item.id === id);\r\n        i > 0 ? this.shopItems.splice(i, 1) : \"\";\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}