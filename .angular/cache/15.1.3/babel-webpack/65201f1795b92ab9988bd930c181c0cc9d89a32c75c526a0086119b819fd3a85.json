{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.counterSource = new BehaviorSubject(0);\n    this.counter = this.counterSource.asObservable();\n    this.shopItems = [];\n    console.log(this.counter);\n  }\n  get() {\n    return this.shopItems;\n  }\n  add(item) {\n    let i = this.shopItems.findIndex(item => item.id === item.id);\n    if (i > 0) {\n      this.shopItems[i].lot++;\n    } else {\n      this.shopItems.push(item);\n    }\n    this.counterSource.next(this.shopItems.length);\n  }\n  remove(id) {\n    let i = this.shopItems.findIndex(item => item.id === id);\n    i > 0 ? this.shopItems.splice(i, 1) : \"\";\n    this.counterSource.next(this.shopItems.length);\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,mBAAmB;EAO5BC;IANQ,kBAAa,GAAG,IAAIF,eAAe,CAAS,CAAC,CAAC;IAC/C,YAAO,GAAG,IAAI,CAACG,aAAa,CAACC,YAAY,EAAE;IAGlD,cAAS,GAAe,EAAE;IAGtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;EAC7B;EAEOC,GAAG;IACN,OAAO,IAAI,CAACC,SAAS;EACzB;EAEOC,GAAG,CAACC,IAAc;IACrB,IAAIC,CAAC,GAAE,IAAI,CAACH,SAAS,CAACI,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC;IAC5D,IAAGF,CAAC,GAAG,CAAC,EAAC;MACL,IAAI,CAACH,SAAS,CAACG,CAAC,CAAC,CAACG,GAAG,EAAE;KAC1B,MAAI;MACD,IAAI,CAACN,SAAS,CAACO,IAAI,CAACL,IAAI,CAAC;;IAE7B,IAAI,CAACR,aAAa,CAACc,IAAI,CAAC,IAAI,CAACR,SAAS,CAACS,MAAM,CAAC;EAElD;EAEOC,MAAM,CAACL,EAAU;IACpB,IAAIF,CAAC,GAAE,IAAI,CAACH,SAAS,CAACI,SAAS,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;IACvDF,CAAC,GAAG,CAAC,GAAG,IAAI,CAACH,SAAS,CAACW,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;IACxC,IAAI,CAACT,aAAa,CAACc,IAAI,CAAC,IAAI,CAACR,SAAS,CAACS,MAAM,CAAC;EAElD;;AA/BSjB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;AAAA","names":["BehaviorSubject","ShoppingCartService","constructor","counterSource","asObservable","console","log","counter","get","shopItems","add","item","i","findIndex","id","lot","push","next","length","remove","splice","factory"],"sourceRoot":"","sources":["C:\\Users\\Franco Viera\\Desktop\\challenge\\challenge\\src\\app\\service\\shopping-cart.ts"],"sourcesContent":["import { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../shared/models/product';\r\nimport { ShopItem } from '../shared/models/shopItem';\r\n\r\n@Injectable()\r\nexport class ShoppingCartService {\r\n    private counterSource = new BehaviorSubject<number>(0);\r\n    public counter = this.counterSource.asObservable();\r\n\r\n\r\n    shopItems: ShopItem[] = [];\r\n\r\n    constructor(){\r\n        console.log(this.counter)\r\n    }\r\n\r\n    public get(): ShopItem[] {\r\n        return this.shopItems;\r\n    }\r\n\r\n    public add(item: ShopItem): void {\r\n        let i= this.shopItems.findIndex(item => item.id === item.id);\r\n        if(i > 0){\r\n            this.shopItems[i].lot++;\r\n        }else{\r\n            this.shopItems.push(item);\r\n        }\r\n        this.counterSource.next(this.shopItems.length);\r\n    \r\n    }\r\n\r\n    public remove(id: number): void{\r\n        let i= this.shopItems.findIndex(item => item.id === id);\r\n        i > 0 ? this.shopItems.splice(i, 1) : \"\";\r\n        this.counterSource.next(this.shopItems.length);\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}