{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.shopItems = [];\n  }\n  getTotalItems() {\n    return this.shopItems.length;\n  }\n  addItem(item) {\n    this.shopItems.push(item);\n  }\n  removeItem(id) {\n    let i = this.shopItems.findIndex(item => item.id === id);\n    i > 0 ? this.shopItems.splice(i, 1) : \"\";\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,mBAAmB;EAI5BC;IACI,IAAI,CAACC,SAAS,GAAE,EAAE;EACtB;EAEOC,aAAa;IAChB,OAAO,IAAI,CAACD,SAAS,CAACE,MAAM;EAChC;EAEOC,OAAO,CAACC,IAAc;IACzB,IAAI,CAACJ,SAAS,CAACK,IAAI,CAACD,IAAI,CAAC;EAC7B;EAEOE,UAAU,CAACC,EAAU;IACxB,IAAIC,CAAC,GAAE,IAAI,CAACR,SAAS,CAACS,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;IACvDC,CAAC,GAAG,CAAC,GAAG,IAAI,CAACR,SAAS,CAACU,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EAC5C;;AAnBSV,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAa,SAAnBb,mBAAmB;AAAA","names":["ShoppingCartService","constructor","shopItems","getTotalItems","length","addItem","item","push","removeItem","id","i","findIndex","splice","factory"],"sourceRoot":"","sources":["C:\\Users\\Franco Viera\\Desktop\\challenge\\challenge\\src\\app\\service\\shopping-cart.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ShopItem } from '../shared/models/shopItem';\r\n\r\n@Injectable()\r\nexport class ShoppingCartService {\r\n\r\n    shopItems: ShopItem[];\r\n\r\n    constructor(){\r\n        this.shopItems= [];\r\n    }\r\n\r\n    public getTotalItems(): number {\r\n        return this.shopItems.length;\r\n    }\r\n\r\n    public addItem(item: ShopItem): void {\r\n        this.shopItems.push(item);\r\n    }\r\n\r\n    public removeItem(id: number): void{\r\n        let i= this.shopItems.findIndex(item => item.id === id);\r\n        i > 0 ? this.shopItems.splice(i, 1) : \"\";\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}